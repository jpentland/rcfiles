#!/bin/sh
BOOKMARK_FILE=~/.config/bookmarks.txt
ENGINES_FILE=~/.config/engines.txt
current=
browser=
go=

ENGINES=$(cat $ENGINES_FILE)

BROWSERS=\
"surf
firefox --new-window
firefox --private-window
chromium --new-window
chromium --new-window --incognito"

function charm_sync {
    charm_key="$1"; shift
    file="$1"; shift

    # Back up the bookmarks file
    echo "Backing up $file to $file.bak"
    cp $file $file.bak

    if ! which charm > /dev/null; then
        echo "Charm not found. Please install it."
        return
    fi

    charm_data="$(charm kv get $charm_key)"
    if [ "$?" -ne 0 ]; then
        charm_data=""
    fi
    local_data="$(cat $file)"

    # Combine both sets of data and use sort -u to remove duplicates
    if [ -z "$charm_data" ]; then
        echo "No data found in Charm. Using local data."
        new_data="$local_data"
    elif [ -z "$local_data" ]; then
        echo "No local data found. Using data from Charm."
        new_data="$charm_data"
    else
        echo "Merging local and charm data."
        new_data="$(echo -e "$local_data\n$charm_data" | sort -u | awk NF)"
    fi
    
    diff_len=$(( $(echo "$new_data" | wc -l) - $(echo "$data_local" | wc -l) ))
    echo "Difference: $diff_len"

    # Write the combined data to the file
    echo "$new_data" > $file
    charm kv set "$charm_key" "$new_data"

    if [ -z "$CHARM_HOST" ]; then
        hosts=cloud.charm.sh
    else
        hosts="$CHARM_HOST"
    fi

    echo "$charm_key synced to $hosts"
}

function charm_sync_all {
    charm_sync "bookmarks" "$BOOKMARK_FILE"
    charm_sync "engines" "$ENGINES_FILE"
}

function handle_search_engines {
	url=$1
	pattern=$(awk '{print $1}' <<< $url)
	engine=$(grep "^$pattern " <<< "$ENGINES" | awk '{print $2}')
	if [ -z "$engine" ]; then
		echo $url
	else
		printf "$engine\n" "$(sed 's/[^ ]* *//' <<< "$url")"
	fi
}

# Options displayed
function options {
	if ! [ -z "$current" ]; then
		echo "$current # Current url"
	fi
	xclip -o -selection clipboard | tr -d '\n'
	echo " # Clipboard"
	cat $BOOKMARK_FILE
}

# Go to URL immediately
if [ "$1" == "-g" ]; then
	shift
	go=$1; shift
fi

# Select browser
if [ "$1" == "-selectbrowser" ]; then
	shift
	browser=$(echo -n "$BROWSERS" | dmenu -l 10 -p "Select browser")
	if [ -z "$browser" ]; then
		exit 0
	fi
fi

# Open in browser
if [ "$1" == "-b" ]; then
	shift
	browser=$1; shift
fi

# Add current url to list of options
if [ "$1" == "--current" ]; then
	shift
	current="$1"; shift
fi

# Embed into a window
if [ "$1" == "-w" ]; then
	shift
	alias dmenu="dmenu -w $1"; shift
fi

# New bookmark
if [ "$1" == "-n" ]; then
	shift
	if [ -z "$current" ]; then
		site=$(xclip -o -selection clipboard)
	else
		site=$current
	fi
		bookmark=$(dmenu -t -p "Create Bookmark: $site #")
	if [ -z "$bookmark" ]; then
		exit 0
	fi
	echo "$site # $bookmark" >> $BOOKMARK_FILE

# Edit bookmark file
elif [ "$1" == "-e" ]; then
	$EDITOR $BOOKMARK_FILE

# Sync bookmarks
elif [ "$1" == "-s" ]; then
    shift
    charm_sync_all

# Normal operations
else
	if ! [ -z "$browser" ]; then
		prompt=$browser
	else
		prompt="go"
	fi
	if [ -z "$go" ]; then
		bookmark=$(options | dmenu -p "$prompt: " -i -l 10 | sed 's/ #.*//g')
	else
		bookmark=$go
	fi
	if ! [ -z "$bookmark" ]; then
		result="$(handle_search_engines "$bookmark")"
		if ! [ -z "$browser" ]; then
			($browser "$result" &)
		else
			echo $result
		fi
	fi
fi
