#
# wm independent hotkeys
#

# terminal emulator
super + shift + Return
	st

# program launcher
super + {_,ctrl + } Return
	{dmenu_run -l 10,\
	 dmenu_path | dmenu -p "term" -l 10 | xargs st -e}

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

# Restart bspstatus
super + grave
	bspstatus -r

#
# bspwm hotkeys
#

# quit/restart bspwm
super + alt + q
	zenity --question --text="Quit BSPWM?" && bspc quit

# quit/restart bspwm
super + alt + r
	zenity --question --text="Restart BSPWM?" && bspc wm -r

# kill window
super + {_,shift + }c
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + space
	bspc desktop -l next

# send the focused node to the newest preselected node
super + y
	bspc node -n newest.!automatic.local

# Balance nodes
super + ctrl + b
	bspc node -B

# swap the current node and the biggest node
super + g
	bspc node -s biggest.local

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

# hide or show dzen bar
super + ctrl + {_,shift + }b
	bspstatus {-k,_}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous desktop and swap if on second monitor
super + bracket{left,right}
	pn={prev,next}; \
	if [ "$pn" = "next" ]; then \
		next=$(bspc query -D --names | sort | grep -A1 $(bspc query -D -d focused --names) | tail -n1); \
	else; \
		next=$(bspc query -D --names | sort | grep -B1 $(bspc query -D -d focused --names) | head -n1); \
	fi; \
	if bspc query -D -m focused --names | grep -q $next; then \
		bspc desktop -f $next; \
	else; \
		bspc desktop -s $next; \
		bspc monitor focused -o $(bspc query -m focused -D --names | sort); \
	fi

# focused the next node
super + {_,shift + }Tab
	bspc node -f {next,prev}.local

# send to the given desktop
super + shift + {1-9}
	bspc node -d '{1-9}'

# Focus given desktop or swap if on other monitor
super + {1-9}
	d='{1-9}'; \
	if ! [ -z "$(bspc query -D -d $d.local)" ]; then \
		bspc desktop -f "$d"; \
	else; \
		bspc desktop -s "$d"; \
	fi; \
	bspc monitor focused -o $(bspc query -m focused -D --names | sort)

# focus monitor
super + Up
	bspc monitor -f next

# Swap desktops
super + ctrl + shift + {1-9}
	local=$(bspc query -D -d focused --names); \
	remote=$(bspc query -D -d {1-9} --names); \
	bspc desktop $remote -n $local; \
	bspc desktop focused -n $remote; \
	bspc desktop $local -f

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# Tab focused window
super + ctrl + t; t
	bsptab tab focused

# Add windows to tabbed
super + ctrl + t; {h,j,k,l}
	bsptab add {west,south,north,east}.local focused

# Add all windows to tabbed
super + ctrl +t; a
	bsptab add-all focused

# Remove windows from tabbed
super + ctrl + t; {_,shift + }r
	bsptab remove{_,-all} focused

# Move tab to desktop
super + ctrl + t; {0-9}
	bsptab remove-desktop focused {0-9}

# Add next new window to tabbed
super + ctrl + t; {_,shift + }n
	bsptab add-{next,new} focused

# Stop auto-tabbing windows
super + ctrl + t; s
	bsptab stop-add-new

# Rotate tree around selected node
super + {_,shift + }r
	bspc node -R {90,-90}

# Flip tree vertically or horizonally
super + ctrl {_,shift + }f
	bspc node -F {vertical,horizontal}

#
# Start applications
#
super + {_,alt +} w
	bookmark {-b surf,-selectbrowser}

super + shift + w
	bookmark -n

super + {_,shift +} z
	slock {_, & sleep 2s && systemctl suspend}

super + q
	~/rcfiles/dmenu-emoji/dmenu-emoji.sh -l 10

super + n
	networkmanager_dmenu

super + shift + n
	btmenu

super + {_,alt +,shift +} F8
	todo {list,add,complete}

# Media Keys
XF86Audio{Play,Pause,Prev,Next}
	playerctl {play-pause,play-pause,previous,next}

super + {F9,F10,F11}
	playerctl {play-pause,previous,next}

XF86Audio{Raise,Lower}Volume
	pactl set-sink-volume @DEFAULT_SINK@ {+,-}1.5%

super + {equal,minus}
	pactl set-sink-volume @DEFAULT_SINK@ {+,-}1.5%

{XF86AudioMute, super + 0}
	pactl set-sink-mute @DEFAULT_SINK@ toggle

# Brightness
XF86MonBrightness{Up,Down}
	backlight.sh {+,-}5

super + shift + {equal,minus}
	backlight.sh {+,-}5

# Password manager
super + m
	mpw-dmenu

super + {shift,alt} + m
	dmenu-pass {_,add}

# Window picker
super + numbersign
	windowpicker

# Scratchpads
F12
	dropdown.sh "st -c dropdown" "dropdown" 0 0 100 30

super + F12; m
	dropdown.sh "pavucontrol" "Pavucontrol" 0 0 100 50

super + F12; e
	dropdown.sh "st -c stmail neomutt" "stmail" 0 0 100 50

super + F12; {_,ctrl + }k
	cmd={less,vim}; \
	dropdown.sh "st -c sxhkdrc$cmd $cmd $HOME/.config/sxhkd/sxhkdrc" "sxhkdrc$cmd" 50 0 50 100

super + F12; s
	dropdown.sh "spotify" "Spotify" 0 0 70 70

super + F12; i
	dropdown.sh "st -c irssi screen -R irssi irssi" "irssi" 0 0 100 50

super + F12; c
	dropdown.sh "st -c khal -e khal interactive" "khal" 70 0 30 40

super + F12; g
	dropdown.sh "st -c gotop -e gotop" "gotop" 0 0 60 70

super + ctrl + p
	dropdown.sh --role "buddy_list" "pidgin" "Pidgin" 0 20 20 80

super + alt + p
	dropdown.sh --role "conversation" "pidgin" "Pidgin" 60 60 40 40

super + F12; r
	dropdown.sh "st -c ranger ranger" "ranger" 0 0 70 70

super + F12; p
    dropdown.sh "element-desktop" "element" 5 5 90 90

super + F12; t
    dropdown.sh "telegram-desktop" "Telegram" 15 5 70 90

super + F12; d
    dropdown.sh "discord" "Discord" 15 5 70 90

super + F12; w
    dropdown.sh "st -c wttr wttr-loop" "wttr" 20 10 60 78

super + F12; z
    dropdown.sh --role "PictureInPicture" "true" "firefox" 79 1 20 22

super + F12; comma
    if pidof trayer; then \
        kill  $(pidof trayer); \
    else \
        trayer --monitor 1; \
    fi

