" Leader
:let mapleader = ","

" Vundle config
set nocompatible              " be iMproved, required
filetype off                  " required

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'ekalinin/Dockerfile.vim'
Plugin 'neovimhaskell/haskell-vim'
Plugin 'wagnerf42/vim-clippy'
Plugin 'airblade/vim-gitgutter'
Plugin 'tpope/vim-sleuth'
Plugin 'cespare/vim-toml'
Plugin 'tpope/vim-surround'
Plugin 'dense-analysis/ale'
Plugin 'hsanson/vim-android'
Plugin 'craigemery/vim-autotag'
call vundle#end()            " required
filetype plugin indent on    " required

if has("autocmd")
  au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
    \| exe "normal! g'\"" | endif
endif

match ErrorMsg '\s\+$'

"Gui options
:set guioptions-=T
:set guioptions-=r  "remove right-hand scroll bar
:set guioptions-=L  "remove left-hand scroll bar
:set guifont=Inconsolata\ 12

" Editor options
:set expandtab
:set tabstop=4
filetype plugin indent on
syntax on
highlight Normal ctermfg=white ctermbg=NONE
:set so=5
set omnifunc=syntaxcomplete#Complete
set tags=./tags,tags;$HOME

" Relative number
:set number relativenumber
:set nu rnu
:augroup numbertoggle
:  autocmd!
:  autocmd BufEnter,FocusGained,InsertLeave * set relativenumber
:  autocmd BufLeave,FocusLost,InsertEnter   * set norelativenumber
:augroup END

" Color options
:hi SpellBad ctermbg='Red'

" Use bar on insert mode
autocmd VimEnter,InsertLeave * silent exec "! echo -ne '\e[1 q'"
autocmd VimLeave,InsertEnter * silent exec "! echo -ne '\e[5 q'"

"File types
autocmd Filetype gitcommit setlocal spell textwidth=72
au BufReadPost,BufNewFile .xmobarrc setlocal ft=haskell

" Email
au BufRead /tmp/mutt-* set tw=72
augroup filetypedetect
  autocmd BufRead,BufNewFile *mutt-*              setfiletype mail
augroup END
autocmd Filetype mail setlocal spell

"Android
let g:andoid_sdk_path="~/Android/Sdk/"

"Copy/Paste integration
function! Osc52Yank()
    let buffer=system('base64 -w0', @0)
    let buffer=substitute(buffer, "\n$", "", "")
    let buffer='\e]52;c;'.buffer.'\x07'
    silent exe "!echo -ne ".shellescape(buffer)." > ".shellescape("/dev/pts/0")
endfunction
command! Osc52CopyYank call Osc52Yank()
augroup Example
    autocmd!
    autocmd TextYankPost * if v:event.operator ==# 'y' | call Osc52Yank() | endif
augroup END
